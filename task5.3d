from time import sleep
from tkinter import *
from gpiozero import LED

led = LED(16)

MORSE_CODE_DICT = {
    'A': '.-', 'B': '-...', 'C': '-.-.', 'D': '-..', 'E': '.', 'F': '..-.', 'G': '--.', 'H': '....',
    'I': '..', 'J': '.---', 'K': '-.-', 'L': '.-..', 'M': '--', 'N': '-.', 'O': '---', 'P': '.--.',
    'Q': '--.-', 'R': '.-.', 'S': '...', 'T': '-', 'U': '..-', 'V': '...-', 'W': '.--', 'X': '-..-',
    'Y': '-.--', 'Z': '--..', '1': '.----', '2': '..---', '3': '...--', '4': '....-', '5': '.....',
    '6': '-....', '7': '--...', '8': '---..', '9': '----.', '0': '-----',
}

def builder():
    name = text1.get().upper()
    if len(name) > 0 and len(name) <= Max_length:  # Check if the input is within the valid length
        arr = list(name)
        MyWord = ''
        for letter in arr:
            if letter != ' ':
                MyWord += MORSE_CODE_DICT.get(letter, '') + ' '
                var = list(MyWord)
                for var1 in var:
                    if var1 == "-":
                        led.on()
                        sleep(0.3)
                        led.off()
                        sleep(0.3)
                    elif var1 == ".":
                        led.on()
                        sleep(0.1)
                        led.off()
                        sleep(0.1)
                    elif var1 == " ":
                        led.off()  # No need to blink for space
                        sleep(0.2)
            else:
                MyWord += ' '
        return MyWord
    else:
        print("Please enter a valid input")

def close():
    root.destroy()

root = Tk()
root.geometry("300x175")

text1 = Entry(root, width=15)
text1.grid(row=1, column=1, padx=16, pady=12)

Max_length = 12  # Define the maximum length of input here

button = Button(root, text="SUBMIT", bg="orange", height=1, width=20, command=builder)
button.grid(row=2, column=1, padx=12, pady=6)

exitButton = Button(root, text="Exit", bg="red", command=close, height=1, width=15)
exitButton.grid(row=3, column=1)

root.mainloop()
